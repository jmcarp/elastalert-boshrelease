---
name: elastalert

packages:
- elastalert

templates:
  data/draft_rules/any.yaml.erb: data/draft_rules/any.yaml
  data/draft_rules/blacklist.yaml.erb: data/draft_rules/blacklist.yaml
  data/draft_rules/whitelist.yaml.erb: data/draft_rules/whitelist.yaml
  data/draft_rules/change.yaml.erb: data/draft_rules/change.yaml
  data/draft_rules/frequency.yaml.erb: data/draft_rules/frequency.yaml
  data/draft_rules/spike.yaml.erb: data/draft_rules/spike.yaml
  data/draft_rules/flatline.yaml.erb: data/draft_rules/flatline.yaml
  data/draft_rules/new_term.yaml.erb: data/draft_rules/new_term.yaml
  data/draft_rules/cardinality.yaml.erb: data/draft_rules/cardinality.yaml
  data/rules/.gitkeep: data/rules/.gitkeep
  data/properties.sh.erb: data/properties.sh
  config/auth.yml.erb: config/auth.yml
  config/config.yaml.erb: config/config.yaml
  bin/ctl: bin/ctl
  bin/monit_debugger: bin/monit_debugger
  helpers/ctl_setup.sh: helpers/ctl_setup.sh
  helpers/ctl_utils.sh: helpers/ctl_utils.sh

consumes:
- name: elasticsearch
  type: elasticsearch
  optional: true

properties:
  elastalert.env.http_proxy:
    description: "HTTP proxy"
  elastalert.env.https_proxy:
    description: "HTTPS proxy"
  elastalert.env.no_proxy:
    description: "List of comma-separated hosts to skip connecting to the proxy"

  elastalert.elasticsearch.host:
    description: "Elasticsearch hostname or IP address"
  elastalert.elasticsearch.port:
    description: "Elasticsearch port number"
  elastalert.run_every.minutes:
    description: "How often ElastAlert will query Elasticsearch"
  elastalert.buffer_time.minutes:
    description: "The size of the query window, stretching backwards from the time each query is run"
  elastalert.alert_time_limit.days:
    description: "The retry window for failed alerts"
  elastalert.smtp_host:
    description: "The SMTP host to use"
  elastalert.smtp_port:
    description: "The SMTP port to use"
  elastalert.smtp_ssl:
    description: "Connect the SMTP host using TLS"
  elastalert.smtp_user:
    description: "The SMTP host's user"
  elastalert.smtp_password:
    description: "The SMTP host user's password"
  elastalert.from_addr:
    description: "This sets the From header in the email"

  elastalert.rules.any.name:
    description: "The name of the rule. This must be unique across all rules"
  elastalert.rules.any.alert:
    description: "The Alerter type to use"
  elastalert.rules.any.index:
    description: "The name of the index that will be searched. Wildcards can be used here"
  elastalert.rules.any.email:
    description: "List of addresses to sent the alert to"

  elastalert.rules.any.filter.operator.value:
    description: "or / and operator for the filter"
  elastalert.rules.any.filter.operator.terms:
    description: "The term type allows for exact field matches"
  elastalert.rules.any.filter.operator.query_string:
    description: "The query_string type follows the Lucene query format and can be used for partial or full matches to multiple fields"
  elastalert.rules.any.filter.operator.range:
    description: "For ranges on fields"
    example: |
      range.field:
      range.from:
      range.to:

  elastalert.rules.blacklist.name:
    description: "The name of the rule. This must be unique across all rules"
  elastalert.rules.blacklist.alert:
    description: "The Alerter type to use"
  elastalert.rules.blacklist.index:
    description: "The name of the index that will be searched. Wildcards can be used here"
  elastalert.rules.blacklist.email:
    description: "List of addresses to sent the alert to"
  elastalert.rules.blacklist.compare_key:
    description: "The name of the field to use to compare to the blacklist. If the field is null, those events will be ignored"
  elastalert.rules.blacklist.values:
    description: "A list of blacklisted values. The compare_key term must be equal to one of these values for it to match"

  elastalert.rules.blacklist.filter.operator.value:
    description: "or / and operator for the filter"
  elastalert.rules.blacklist.filter.operator.terms:
    description: "The term type allows for exact field matches"
  elastalert.rules.blacklist.filter.operator.query_string:
    description: "The query_string type follows the Lucene query format and can be used for partial or full matches to multiple fields"
  elastalert.rules.blacklist.filter.operator.range:
    description: "For ranges on fields"
    example: |
      range.field:
      range.from:
      range.to:

  elastalert.rules.cardinality.name:
    description: "The name of the rule. This must be unique across all rules"
  elastalert.rules.cardinality.alert:
    description: "The Alerter type to use"
  elastalert.rules.cardinality.index:
    description: "The name of the index that will be searched. Wildcards can be used here"
  elastalert.rules.cardinality.email:
    description: "List of addresses to sent the alert to"
  elastalert.rules.cardinality.timeframe.hours:
    description: "The time period in which the number of unique values will be counted"
  elastalert.rules.cardinality.cardinality_field:
    description: "Which field to count the cardinality for"
  elastalert.rules.cardinality.min_cardinality:
    description: "If the cardinality of the data is lower than this number, an alert will be triggered"
  elastalert.rules.cardinality.max_cardinality:
    description: "If the cardinality of the data is higher than this number, an alert will be triggered"

  elastalert.rules.cardinality.filter.operator.value:
    description: "or / and operator for the filter"
  elastalert.rules.cardinality.filter.operator.terms:
    description: "The term type allows for exact field matches"
  elastalert.rules.cardinality.filter.operator.query_string:
    description: "The query_string type follows the Lucene query format and can be used for partial or full matches to multiple fields"
  elastalert.rules.cardinality.filter.operator.range:
    description: "For ranges on fields"
    example: |
      range.field:
      range.from:
      range.to:

  elastalert.rules.change.name:
    description: "The name of the rule. This must be unique across all rules"
  elastalert.rules.change.alert:
    description: "The Alerter type to use"
  elastalert.rules.change.index:
    description: "The name of the index that will be searched. Wildcards can be used here"
  elastalert.rules.change.email:
    description: "List of addresses to sent the alert to"
  elastalert.rules.change.timeframe.hours:
    description: "The maximum time between changes. After this time period, ElastAlert will forget the old value of the compare_key field"
  elastalert.rules.change.compare_key:
    description: "The name of the field to monitor for changes"
  elastalert.rules.change.ignore_null:
    description: "If true, events without a compare_key field will not count as changed"
  elastalert.rules.change.query_key:
    description: "This rule is applied on a per-query_key basis. This field must be present in all of the events that are checked"

  elastalert.rules.change.filter.operator.value:
    description: "or / and operator for the filter"
  elastalert.rules.change.filter.operator.terms:
    description: "The term type allows for exact field matches"
  elastalert.rules.change.filter.operator.query_string:
    description: "The query_string type follows the Lucene query format and can be used for partial or full matches to multiple fields"
  elastalert.rules.change.filter.operator.range:
    description: "For ranges on fields"
    example: |
      range.field:
      range.from:
      range.to:

  elastalert.rules.flatline.name:
    description: "The name of the rule. This must be unique across all rules"
  elastalert.rules.flatline.alert:
    description: "The Alerter type to use"
  elastalert.rules.flatline.index:
    description: "The name of the index that will be searched. Wildcards can be used here"
  elastalert.rules.flatline.email:
    description: "List of addresses to sent the alert to"
  elastalert.rules.flatline.timeframe.hours:
    description: "The time period that must contain less than threshold events"
  elastalert.rules.flatline.threshold:
    description: "The minimum number of events for an alert not to be triggered"

  elastalert.rules.flatline.filter.operator.value:
    description: "or / and operator for the filter"
  elastalert.rules.flatline.filter.operator.terms:
    description: "The term type allows for exact field matches"
  elastalert.rules.flatline.filter.operator.query_string:
    description: "The query_string type follows the Lucene query format and can be used for partial or full matches to multiple fields"
  elastalert.rules.flatline.filter.operator.range:
    description: "For ranges on fields"
    example: |
      range.field:
      range.from:
      range.to:

  elastalert.rules.frequency.name:
    description: "The name of the rule. This must be unique across all rules"
  elastalert.rules.frequency.alert:
    description: "The Alerter type to use"
  elastalert.rules.frequency.index:
    description: "The name of the index that will be searched. Wildcards can be used here"
  elastalert.rules.frequency.email:
    description: "List of addresses to sent the alert to"
  elastalert.rules.frequency.num_events:
    description: "The number of events which will trigger an alert"
  elastalert.rules.frequency.timeframe.hours:
    description: "The time that num_events must occur within"

  elastalert.rules.frequency.filter.operator.value:
    description: "or / and operator for the filter"
  elastalert.rules.frequency.filter.operator.terms:
    description: "The term type allows for exact field matches"
  elastalert.rules.frequency.filter.operator.query_string:
    description: "The query_string type follows the Lucene query format and can be used for partial or full matches to multiple fields"
  elastalert.rules.frequency.filter.operator.range:
    description: "For ranges on fields"
    example: |
      range.field:
      range.from:
      range.to:

  elastalert.rules.new_term.name:
    description: "The name of the rule. This must be unique across all rules"
  elastalert.rules.new_term.alert:
    description: "The Alerter type to use"
  elastalert.rules.new_term.index:
    description: "The name of the index that will be searched. Wildcards can be used here"
  elastalert.rules.new_term.email:
    description: "List of addresses to sent the alert to"
  elastalert.rules.new_term.terms_window_size.days:
    description: "The amount of time used for the initial query to find existing terms. No term that has occurred within this time frame will trigger an alert"
  elastalert.rules.new_term.fields:
    description: "A list of fields to monitor for new terms"

  elastalert.rules.new_term.filter.operator.value:
    description: "or / and operator for the filter"
  elastalert.rules.new_term.filter.operator.terms:
    description: "The term type allows for exact field matches"
  elastalert.rules.new_term.filter.operator.query_string:
    description: "The query_string type follows the Lucene query format and can be used for partial or full matches to multiple fields"
  elastalert.rules.new_term.filter.operator.range:
    description: "For ranges on fields"
    example: |
      range.field:
      range.from:
      range.to:

  elastalert.rules.spike.name:
    description: "The name of the rule. This must be unique across all rules"
  elastalert.rules.spike.alert:
    description: "The Alerter type to use"
  elastalert.rules.spike.index:
    description: "The name of the index that will be searched. Wildcards can be used here"
  elastalert.rules.spike.email:
    description: "List of addresses to sent the alert to"
  elastalert.rules.spike.timeframe.hours:
    description: "The rule will average out the rate of events over this time period"
  elastalert.rules.spike.threshold_cur:
    description: "The minimum number of events that must exist in the current window for an alert to trigger"
  elastalert.rules.spike.spike_height:
    description: "The ratio of number of events in the last timeframe to the previous timeframe that when hit will trigger an alert"
  elastalert.rules.spike.spike_type:
    description: "Either up, down or both. Up meaning the rule will only match when the number of events is spike_height times higher. Down meaning the reference number is spike_height higher than the current number. Both will match either"

  elastalert.rules.spike.filter.operator.value:
    description: "or / and operator for the filter"
  elastalert.rules.spike.filter.operator.terms:
    description: "The term type allows for exact field matches"
  elastalert.rules.spike.filter.operator.query_string:
    description: "The query_string type follows the Lucene query format and can be used for partial or full matches to multiple fields"
  elastalert.rules.spike.filter.operator.range:
    description: "For ranges on fields"
    example: |
      range.field:
      range.from:
      range.to:

  elastalert.rules.whitelist.name:
    description: "The name of the rule. This must be unique across all rules"
  elastalert.rules.whitelist.alert:
    description: "The Alerter type to use"
  elastalert.rules.whitelist.index:
    description: "The name of the index that will be searched. Wildcards can be used here"
  elastalert.rules.whitelist.email:
    description: "List of addresses to sent the alert to"
  elastalert.rules.whitelist.compare_key:
    description: "The name of the field to use to compare to the whitelist"
  elastalert.rules.whitelist.ignore_null:
    description: "If true, events without a compare_key field will not match"
  elastalert.rules.whitelist.values:
    description: "A list of whitelisted values. The compare_key term must be in this list or else it will match"

  elastalert.rules.whitelist.filter.operator.value:
    description: "or / and operator for the filter"
  elastalert.rules.whitelist.filter.operator.terms:
    description: "The term type allows for exact field matches"
  elastalert.rules.whitelist.filter.operator.query_string:
    description: "The query_string type follows the Lucene query format and can be used for partial or full matches to multiple fields"
  elastalert.rules.whitelist.filter.operator.range:
    description: "For ranges on fields"
    example: |
      range.field:
      range.from:
      range.to:

